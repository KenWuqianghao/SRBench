nohup: ignoring input
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fc6364aec20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
Training time measures: 11.693256476999998 23.251686811447144
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/663_rabe_266//663_rabe_266_MLPRegressor_23654
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fac434e5c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 10.616992643 25.95973539352417
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/192_vineyard//192_vineyard_MLPRegressor_23654
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f2d33188c20>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 10
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
----------
iter: 3
n_candidates: 1
n_resources: 270
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.5s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.6s
Training time measures: 19.594763245000003 32.62184548377991
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/519_vinnie//519_vinnie_MLPRegressor_23654
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7ff57f61dcb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
Training time measures: 9.219560914 19.630677938461304
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_MLPRegressor_23654
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f7619278c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 11.050455395 26.179409742355347
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_MLPRegressor_23654
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f1487cf0cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
Training time measures: 11.351025539999998 21.66336679458618
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_MLPRegressor_23654
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7ff4c186cc20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
Training time measures: 15.550329873999999 31.655529022216797
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_MLPRegressor_23654
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f45a26f7c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 12.433678223000001 27.70311713218689
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/228_elusage//228_elusage_MLPRegressor_23654
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fc206cdbcb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   1.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   1.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.9s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
Training time measures: 25.075462697 31.79404067993164
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_MLPRegressor_23654
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f3da9808c20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
Training time measures: 11.367471144000001 23.100374937057495
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/663_rabe_266//663_rabe_266_MLPRegressor_15795
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f0a51746c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 10.587563899000001 23.783619165420532
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/192_vineyard//192_vineyard_MLPRegressor_15795
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7feede1bcc20>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 10
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
----------
iter: 3
n_candidates: 1
n_resources: 270
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   1.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.9s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.6s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.6s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   1.2s
Training time measures: 29.283928908 33.29578137397766
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/519_vinnie//519_vinnie_MLPRegressor_15795
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f0937784cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
Training time measures: 8.976770582 16.964150428771973
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_MLPRegressor_15795
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f0b61012c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 10.598391071 22.373889446258545
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_MLPRegressor_15795
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fac178b5cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
Training time measures: 11.590811112 17.757736444473267
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_MLPRegressor_15795
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f5c2d8dfc20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 13.346538429999999 27.397143125534058
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_MLPRegressor_15795
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fa1bd18fc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 13.096700577 27.35325336456299
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/228_elusage//228_elusage_MLPRegressor_15795
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f4349a23cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.8s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.4s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.4s
Training time measures: 17.853427702 24.269713878631592
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_MLPRegressor_15795
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=860),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f0247982c20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
Training time measures: 10.157519957 23.13311004638672
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/663_rabe_266//663_rabe_266_MLPRegressor_860
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=860),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f3aa2483c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 11.329388726 24.24883723258972
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/192_vineyard//192_vineyard_MLPRegressor_860
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=860),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f277cd72c20>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 10
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
----------
iter: 3
n_candidates: 1
n_resources: 270
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.7s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.7s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.7s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.7s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.7s
Training time measures: 23.004487283 37.951388120651245
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/519_vinnie//519_vinnie_MLPRegressor_860
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=860),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fcad34d8cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
Training time measures: 7.099124026 15.17490005493164
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_MLPRegressor_860
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=860),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f1892deac20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 11.776826416 24.486559629440308
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_MLPRegressor_860
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=860),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fd36c2cacb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
Training time measures: 13.815065365 25.414548873901367
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_MLPRegressor_860
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=860),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f651a1dec20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 13.577263647 30.5184109210968
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_MLPRegressor_860
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=860),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fc309e87c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
Training time measures: 11.55527746 25.066389799118042
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/228_elusage//228_elusage_MLPRegressor_860
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=860),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f25c7e33cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
Training time measures: 10.758691719 21.184776067733765
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_MLPRegressor_860
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7ffb658d2c20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
Training time measures: 10.525928906 24.53420114517212
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/663_rabe_266//663_rabe_266_MLPRegressor_5390
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f58cbdedc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 11.830292228 30.50461721420288
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/192_vineyard//192_vineyard_MLPRegressor_5390
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f3030784c20>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 10
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.3s
----------
iter: 3
n_candidates: 1
n_resources: 270
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
Training time measures: 16.529164786 33.686960220336914
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/519_vinnie//519_vinnie_MLPRegressor_5390
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f9ccf784cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
Training time measures: 6.836483042999999 16.452671766281128
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_MLPRegressor_5390
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f5512877c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 11.642677713000001 30.380160808563232
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_MLPRegressor_5390
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fdcab441cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
Training time measures: 11.094070335000001 21.707217693328857
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_MLPRegressor_5390
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fe8cf902c20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.4s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
Training time measures: 14.112585179 35.66533017158508
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_MLPRegressor_5390
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f1c9dd26c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 11.373992031 25.839847564697266
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/228_elusage//228_elusage_MLPRegressor_5390
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f323113ccb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
Training time measures: 9.363658285 16.070089101791382
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_MLPRegressor_5390
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f9846204c20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
Training time measures: 9.414508652999999 20.761358976364136
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/663_rabe_266//663_rabe_266_MLPRegressor_16850
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f4e8e5dbc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
Training time measures: 12.17502548 28.159960746765137
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/192_vineyard//192_vineyard_MLPRegressor_16850
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fef0900dc20>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 10
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
----------
iter: 3
n_candidates: 1
n_resources: 270
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
Training time measures: 15.553220807 28.355637550354004
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/519_vinnie//519_vinnie_MLPRegressor_16850
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f95e1eb3cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
Training time measures: 6.635378023 13.723677396774292
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_MLPRegressor_16850
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fd73a1d2c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 11.474353482 28.08691430091858
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_MLPRegressor_16850
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f03bfcf5cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.4s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
Training time measures: 13.67843263 18.790565252304077
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_MLPRegressor_16850
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f32b08c6c20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 14.496234897 35.00614356994629
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_MLPRegressor_16850
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f67e7a02c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 12.151118508 29.814072132110596
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/228_elusage//228_elusage_MLPRegressor_16850
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f5f70715cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.4s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.9s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.9s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
Training time measures: 13.299967174 22.730098962783813
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_MLPRegressor_16850
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f3c74854c20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.4s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
Training time measures: 11.658532357 32.51776671409607
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/663_rabe_266//663_rabe_266_MLPRegressor_29910
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f4f75a0bc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 11.558444065 28.520254611968994
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/192_vineyard//192_vineyard_MLPRegressor_29910
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fb121432c20>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 10
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
----------
iter: 3
n_candidates: 1
n_resources: 270
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
Training time measures: 13.339067058000001 27.765239477157593
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/519_vinnie//519_vinnie_MLPRegressor_29910
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f33b5825cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
Training time measures: 8.705902364 18.02671766281128
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_MLPRegressor_29910
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f3b81d5dc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 13.695892684 23.49510908126831
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_MLPRegressor_29910
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f598cef1cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.4s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.8s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.9s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.8s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.8s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.9s
Training time measures: 22.813593013000002 33.70072412490845
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_MLPRegressor_29910
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fed6d600c20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
Training time measures: 14.185948797000002 29.406723737716675
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_MLPRegressor_29910
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f1ac30a0c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
Training time measures: 10.15944899 22.296290159225464
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/228_elusage//228_elusage_MLPRegressor_29910
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fe38305bcb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.4s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   1.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.9s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.7s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   1.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.4s
Training time measures: 26.860891508999998 25.01840877532959
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_MLPRegressor_29910
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7ffaf241bc20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.4s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.4s
Training time measures: 11.28250827 26.54884624481201
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/663_rabe_266//663_rabe_266_MLPRegressor_4426
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f67a1d4bc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
Training time measures: 12.006522035 22.675459384918213
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/192_vineyard//192_vineyard_MLPRegressor_4426
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f07ed63ec20>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 10
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
----------
iter: 3
n_candidates: 1
n_resources: 270
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.4s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.4s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.4s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.5s
Training time measures: 18.356402852000002 27.466989755630493
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/519_vinnie//519_vinnie_MLPRegressor_4426
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f6ab4252cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
Training time measures: 6.606566539 18.415051221847534
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_MLPRegressor_4426
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fc62549ec20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
Training time measures: 11.824157443 22.713237524032593
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_MLPRegressor_4426
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fdf2cfb5cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.6s
Training time measures: 16.077119062 16.531145334243774
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_MLPRegressor_4426
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f79af7c4c20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
Training time measures: 14.392302334 36.4258029460907
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_MLPRegressor_4426
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f0ec735bc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 13.038098615000001 32.49726176261902
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/228_elusage//228_elusage_MLPRegressor_4426
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f6ed4e30cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.4s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.4s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.5s
Training time measures: 15.341768567 18.755860805511475
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_MLPRegressor_4426
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fe2bb644c20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
Training time measures: 10.995907971 15.98495626449585
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/663_rabe_266//663_rabe_266_MLPRegressor_21962
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fb950208c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 10.206343041 26.626466989517212
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/192_vineyard//192_vineyard_MLPRegressor_21962
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f57a863dc20>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 10
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
----------
iter: 3
n_candidates: 1
n_resources: 270
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.7s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.6s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.5s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.7s
Training time measures: 21.880003535 34.10848426818848
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/519_vinnie//519_vinnie_MLPRegressor_21962
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f5904580cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
Training time measures: 8.099179926 11.669765710830688
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_MLPRegressor_21962
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f7040319c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 11.057952156999999 31.142960786819458
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_MLPRegressor_21962
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f7d5bf9bcb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
Training time measures: 9.664841866 21.029613256454468
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_MLPRegressor_21962
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fbb73edbc20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.4s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 15.074816916 26.5979266166687
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_MLPRegressor_21962
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f6b2cd4ec20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
Training time measures: 12.191199791 25.38500475883484
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/228_elusage//228_elusage_MLPRegressor_21962
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fecf06decb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.3s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
Training time measures: 9.909848593 19.301457405090332
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_MLPRegressor_21962
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7ff08f610c20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
Training time measures: 12.054411351 24.699421644210815
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/663_rabe_266//663_rabe_266_MLPRegressor_14423
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fb96078bc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 12.377216821 25.120574474334717
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/192_vineyard//192_vineyard_MLPRegressor_14423
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f049f215c20>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 10
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
----------
iter: 3
n_candidates: 1
n_resources: 270
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.3s
Training time measures: 17.045972253000002 28.029677391052246
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/519_vinnie//519_vinnie_MLPRegressor_14423
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f5af4c28cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
Training time measures: 7.690155271 12.751094102859497
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_MLPRegressor_14423
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fb9a0229c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
Training time measures: 11.846107635 22.66941475868225
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_MLPRegressor_14423
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fcfdbb5ecb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
Training time measures: 9.303670926999999 14.363779783248901
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_MLPRegressor_14423
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f1408f7cc20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 16.253229414 27.726651191711426
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_MLPRegressor_14423
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f13df982c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 12.389526543999999 19.35380983352661
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/228_elusage//228_elusage_MLPRegressor_14423
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fa52d142cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.3s
Training time measures: 13.872206924 19.076240301132202
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_MLPRegressor_14423
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fa4eaf64c20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.0s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
Training time measures: 9.089323033 14.684081077575684
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/663_rabe_266//663_rabe_266_MLPRegressor_28020
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f769db03c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
Training time measures: 11.944907891 25.18398928642273
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/192_vineyard//192_vineyard_MLPRegressor_28020
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fab411e6c20>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 10
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
----------
iter: 3
n_candidates: 1
n_resources: 270
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.4s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
Training time measures: 15.102949528999998 31.367423057556152
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/519_vinnie//519_vinnie_MLPRegressor_28020
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7faaaa129cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
Training time measures: 6.670340939 9.722947120666504
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_MLPRegressor_28020
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f543f132c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 10.922742282 20.02756428718567
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_MLPRegressor_28020
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f2f8a737cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.4s
Training time measures: 19.298897016 23.497057914733887
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_MLPRegressor_28020
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7fe5a761dc20>,
                    scoring='r2', verbose=2)
n_iterations: 3
n_required_iterations: 4
n_possible_iterations: 3
min_resources_: 10
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 2
n_candidates: 3
n_resources: 90
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.4s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
Training time measures: 15.535555257 29.55038833618164
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_MLPRegressor_28020
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f6b38e00c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 4
n_possible_iterations: 2
min_resources_: 10
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 10
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.3s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
----------
iter: 1
n_candidates: 9
n_resources: 30
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.3s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.2s
Training time measures: 11.953146964 29.172374486923218
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/228_elusage//228_elusage_MLPRegressor_28020
import from methods.MLPRegressor
algorithm: MLPRegressor()
hyperparams: [{'activation': ('logistic', 'tanh', 'relu'), 'solver': ('lbfgs', 'adam', 'sgd'), 'learning_rate': ('constant', 'invscaling', 'adaptive')}]
========================================
Evaluating MLPRegressor on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=MLPRegressor(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'activation': ('logistic', 'tanh', 'relu'),
                                 'learning_rate': ('constant', 'invscaling',
                                                   'adaptive'),
                                 'solver': ('lbfgs', 'adam', 'sgd')}],
                    refit=<function _refit_callable at 0x7f66224d0cb0>,
                    scoring='r2', verbose=2)
n_iterations: 4
n_required_iterations: 4
n_possible_iterations: 4
min_resources_: 13
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 27
n_resources: 13
Fitting 5 folds for each of 27 candidates, totalling 135 fits
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.3s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=lbfgs; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=adaptive, solver=sgd; total time=   0.1s
----------
iter: 1
n_candidates: 9
n_resources: 39
Fitting 5 folds for each of 9 candidates, totalling 45 fits
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.2s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=adam; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=tanh, learning_rate=invscaling, solver=sgd; total time=   0.2s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=relu, learning_rate=invscaling, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
----------
iter: 2
n_candidates: 3
n_resources: 117
Fitting 5 folds for each of 3 candidates, totalling 15 fits
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=adaptive, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
[CV] END activation=logistic, learning_rate=invscaling, solver=sgd; total time=   0.0s
----------
iter: 3
n_candidates: 1
n_resources: 351
Fitting 5 folds for each of 1 candidates, totalling 5 fits
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.6s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.5s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.1s
[CV] END activation=logistic, learning_rate=constant, solver=sgd; total time=   0.6s
Training time measures: 18.522833429 16.66731333732605
WARNING: attempting to store  (100,) as a str for json
save_file: ../results_MLP_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_MLPRegressor_28020
learners: ['MLPRegressor']
dataset directory: ../filtered_black_box_datasets
found 19 datasets
skipped 0 jobs with results. Override with --noskips.
skipped 0 jobs without results. Override with --noskips.
skipped 0 queued jobs. Override with --noskips.
submitting 90 jobs...
Finished submitting 90 jobs.
