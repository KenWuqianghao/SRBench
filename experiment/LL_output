nohup: ignoring input
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f34e65aec20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 30
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 30
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 90
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07554267000000014 0.20510506629943848
save_file: ../results_LL_filtered_black_box/663_rabe_266//663_rabe_266_LassoLars_23654
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fdfa5a74c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
Training time measures: 0.07452282300000013 0.21272730827331543
save_file: ../results_LL_filtered_black_box/192_vineyard//192_vineyard_LassoLars_23654
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f5bb6b82c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 95
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 95
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 285
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07266794100000018 0.21506118774414062
save_file: ../results_LL_filtered_black_box/519_vinnie//519_vinnie_LassoLars_23654
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fb642d57cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 25
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 25
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 75
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.0820679649999998 0.18531489372253418
save_file: ../results_LL_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_LassoLars_23654
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f0ac4ce6c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 27
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 27
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 81
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07754699800000009 0.2180943489074707
save_file: ../results_LL_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_LassoLars_23654
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f9396bbbcb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07753279700000015 0.3102569580078125
save_file: ../results_LL_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_LassoLars_23654
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f060a01ac20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 55
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 55
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 165
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.09488129199999995 0.2339327335357666
save_file: ../results_LL_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_LassoLars_23654
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fefbd8f2c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.08269550999999997 0.3371093273162842
save_file: ../results_LL_filtered_black_box/228_elusage//228_elusage_LassoLars_23654
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=23654, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=23654),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fba1b911cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.08404480300000006 0.2904942035675049
save_file: ../results_LL_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_LassoLars_23654
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f08b9a86c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 30
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 30
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 90
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07597366100000014 0.23204970359802246
save_file: ../results_LL_filtered_black_box/663_rabe_266//663_rabe_266_LassoLars_15795
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fc6ebdedc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07406424400000011 0.21146345138549805
save_file: ../results_LL_filtered_black_box/192_vineyard//192_vineyard_LassoLars_15795
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f8562935c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 95
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 95
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 285
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07557770499999994 0.20759916305541992
save_file: ../results_LL_filtered_black_box/519_vinnie//519_vinnie_LassoLars_15795
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f4da7e02cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 25
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 25
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 75
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07361726400000013 0.22267842292785645
save_file: ../results_LL_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_LassoLars_15795
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f990a64cc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 27
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 27
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 81
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.08057175999999999 0.2794225215911865
save_file: ../results_LL_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_LassoLars_15795
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f24a8106cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07317693599999986 0.21278619766235352
save_file: ../results_LL_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_LassoLars_15795
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fdc1def4c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 55
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 55
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 165
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07451621299999989 0.24793028831481934
save_file: ../results_LL_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_LassoLars_15795
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f92db161c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
Training time measures: 0.07283263299999998 0.22269940376281738
save_file: ../results_LL_filtered_black_box/228_elusage//228_elusage_LassoLars_15795
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=15795, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=15795),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f18da8a8cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.08360221300000004 0.2678647041320801
save_file: ../results_LL_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_LassoLars_15795
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=860),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f957c0e0c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 30
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 30
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 90
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07535063399999986 0.26015353202819824
save_file: ../results_LL_filtered_black_box/663_rabe_266//663_rabe_266_LassoLars_860
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=860),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fa665047c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
Training time measures: 0.07450496200000001 0.2486860752105713
save_file: ../results_LL_filtered_black_box/192_vineyard//192_vineyard_LassoLars_860
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=860),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7ffa99f4fc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 95
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 95
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 285
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07527366599999996 0.2784566879272461
save_file: ../results_LL_filtered_black_box/519_vinnie//519_vinnie_LassoLars_860
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=860),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f89a5112cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 25
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 25
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 75
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.07601478100000003 0.2818603515625
save_file: ../results_LL_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_LassoLars_860
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=860),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fdf15788c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 27
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 27
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 81
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.08183390899999998 0.2884519100189209
save_file: ../results_LL_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_LassoLars_860
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=860),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f7b3bccfcb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.08109384800000008 0.2476365566253662
save_file: ../results_LL_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_LassoLars_860
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=860),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fd626aa0c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 55
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 55
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 165
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07799707700000003 0.24184155464172363
save_file: ../results_LL_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_LassoLars_860
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=860),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fcab8a9fc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07579372900000014 0.20602726936340332
save_file: ../results_LL_filtered_black_box/228_elusage//228_elusage_LassoLars_860
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=860, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=860),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7ff981808cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07409027299999993 0.22800564765930176
save_file: ../results_LL_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_LassoLars_860
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f02c609fc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 30
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 30
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 90
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07594969200000001 0.24299073219299316
save_file: ../results_LL_filtered_black_box/663_rabe_266//663_rabe_266_LassoLars_5390
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f6f75b5bc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.0747325179999998 0.26003193855285645
save_file: ../results_LL_filtered_black_box/192_vineyard//192_vineyard_LassoLars_5390
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f948e6f1c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 95
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 95
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 285
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07294782199999994 0.250286340713501
save_file: ../results_LL_filtered_black_box/519_vinnie//519_vinnie_LassoLars_5390
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f8848292cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 25
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 25
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 75
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07193480199999991 0.26726675033569336
save_file: ../results_LL_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_LassoLars_5390
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f766d8e5c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 27
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 27
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 81
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07868093300000001 0.17726731300354004
save_file: ../results_LL_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_LassoLars_5390
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fa56458ecb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07275716399999999 0.25797486305236816
save_file: ../results_LL_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_LassoLars_5390
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f7e5e639c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 55
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 55
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 165
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07513603099999999 0.2541489601135254
save_file: ../results_LL_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_LassoLars_5390
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7faedf024c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07517796499999996 0.24306082725524902
save_file: ../results_LL_filtered_black_box/228_elusage//228_elusage_LassoLars_5390
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=5390, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=5390),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fcac8438cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07627519100000013 0.29941415786743164
save_file: ../results_LL_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_LassoLars_5390
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f86e2646c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 30
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 30
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 90
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07493335099999987 0.27404236793518066
save_file: ../results_LL_filtered_black_box/663_rabe_266//663_rabe_266_LassoLars_16850
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f82de704c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
Training time measures: 0.07187481600000001 0.22408509254455566
save_file: ../results_LL_filtered_black_box/192_vineyard//192_vineyard_LassoLars_16850
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fba64c9ac20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 95
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 95
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 285
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.08309135799999989 0.2501192092895508
save_file: ../results_LL_filtered_black_box/519_vinnie//519_vinnie_LassoLars_16850
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f90bafd7cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 25
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 25
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 75
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07221933100000011 0.2390289306640625
save_file: ../results_LL_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_LassoLars_16850
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f4a683dbc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 27
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 27
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 81
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07722582099999986 0.1986994743347168
save_file: ../results_LL_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_LassoLars_16850
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f3bf48b0cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07737530999999986 0.29592108726501465
save_file: ../results_LL_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_LassoLars_16850
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f7024fbcc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 55
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 55
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 165
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.07506751 0.22185730934143066
save_file: ../results_LL_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_LassoLars_16850
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f09220d1c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.08667861200000004 0.28693127632141113
save_file: ../results_LL_filtered_black_box/228_elusage//228_elusage_LassoLars_16850
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=16850, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=16850),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7eff30f77cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07318348200000013 0.2225501537322998
save_file: ../results_LL_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_LassoLars_16850
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f243f341c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 30
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 30
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 90
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.076216222 0.24748992919921875
save_file: ../results_LL_filtered_black_box/663_rabe_266//663_rabe_266_LassoLars_29910
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f3b6705bc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
Training time measures: 0.07595818499999996 0.246351957321167
save_file: ../results_LL_filtered_black_box/192_vineyard//192_vineyard_LassoLars_29910
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fb0eb911c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 95
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 95
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 285
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.07510481999999996 0.25957417488098145
save_file: ../results_LL_filtered_black_box/519_vinnie//519_vinnie_LassoLars_29910
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fd68955dcb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 25
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 25
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 75
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.074469852 0.23544597625732422
save_file: ../results_LL_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_LassoLars_29910
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f3179b84c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 27
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 27
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 81
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07861433700000009 0.23664283752441406
save_file: ../results_LL_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_LassoLars_29910
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7ff064130cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07369804200000019 0.2108311653137207
save_file: ../results_LL_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_LassoLars_29910
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f660cb1bc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 55
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 55
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 165
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07419027899999997 0.15878844261169434
save_file: ../results_LL_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_LassoLars_29910
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f4d7d463c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.07383580500000009 0.28427982330322266
save_file: ../results_LL_filtered_black_box/228_elusage//228_elusage_LassoLars_29910
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=29910, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=29910),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fe5a004fcb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.077819109 0.32026219367980957
save_file: ../results_LL_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_LassoLars_29910
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f7fac170c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 30
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 30
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 90
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.07549745400000019 0.26682257652282715
save_file: ../results_LL_filtered_black_box/663_rabe_266//663_rabe_266_LassoLars_4426
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fa11c6bdc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
Training time measures: 0.0741376680000001 0.2438185214996338
save_file: ../results_LL_filtered_black_box/192_vineyard//192_vineyard_LassoLars_4426
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fb289327c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 95
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 95
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 285
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07248961399999998 0.23446989059448242
save_file: ../results_LL_filtered_black_box/519_vinnie//519_vinnie_LassoLars_4426
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fe14e4becb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 25
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 25
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 75
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07505949700000003 0.23600053787231445
save_file: ../results_LL_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_LassoLars_4426
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fe23beedc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 27
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 27
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 81
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07667598199999981 0.333895206451416
save_file: ../results_LL_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_LassoLars_4426
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fa90e40bcb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07891764400000012 0.31046485900878906
save_file: ../results_LL_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_LassoLars_4426
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f8c6dc27c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 55
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 55
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 165
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07547291999999994 0.27300596237182617
save_file: ../results_LL_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_LassoLars_4426
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f47a3875c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.2s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07532680699999994 0.34207820892333984
save_file: ../results_LL_filtered_black_box/228_elusage//228_elusage_LassoLars_4426
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=4426, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=4426),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f7ce9b6ccb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07417574699999996 0.2322239875793457
save_file: ../results_LL_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_LassoLars_4426
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f588d171c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 30
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 30
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 90
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.074561031 0.24657535552978516
save_file: ../results_LL_filtered_black_box/663_rabe_266//663_rabe_266_LassoLars_21962
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f92b4e59c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
Training time measures: 0.07742497600000009 0.25030064582824707
save_file: ../results_LL_filtered_black_box/192_vineyard//192_vineyard_LassoLars_21962
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fbafce00c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 95
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 95
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 285
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07607856300000004 0.30146002769470215
save_file: ../results_LL_filtered_black_box/519_vinnie//519_vinnie_LassoLars_21962
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fa3da6b9cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 25
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 25
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 75
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07815074499999985 0.27809762954711914
save_file: ../results_LL_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_LassoLars_21962
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7ff4cad9dc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 27
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 27
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 81
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
Training time measures: 0.07372371099999997 0.23991990089416504
save_file: ../results_LL_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_LassoLars_21962
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f8a35c86cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.0831348059999999 0.23778438568115234
save_file: ../results_LL_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_LassoLars_21962
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f2abc45cc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 55
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 55
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 165
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.07964383199999991 0.22335577011108398
save_file: ../results_LL_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_LassoLars_21962
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f5426aedc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.08036164300000004 0.24412250518798828
save_file: ../results_LL_filtered_black_box/228_elusage//228_elusage_LassoLars_21962
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=21962, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=21962),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f8bf9c76cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07455114999999979 0.2316725254058838
save_file: ../results_LL_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_LassoLars_21962
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fa446ffec20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 30
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 30
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 90
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.08707727300000001 0.28775572776794434
save_file: ../results_LL_filtered_black_box/663_rabe_266//663_rabe_266_LassoLars_14423
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f97f9f9dc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07514747500000007 0.24169325828552246
save_file: ../results_LL_filtered_black_box/192_vineyard//192_vineyard_LassoLars_14423
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f1cfd7b6c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 95
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 95
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 285
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.0762313750000001 0.18184947967529297
save_file: ../results_LL_filtered_black_box/519_vinnie//519_vinnie_LassoLars_14423
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f6f1d4cccb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 25
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 25
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 75
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07547753400000001 0.19337892532348633
save_file: ../results_LL_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_LassoLars_14423
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f637fb5ec20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 27
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 27
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 81
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.08133140699999997 0.3010373115539551
save_file: ../results_LL_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_LassoLars_14423
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f8c982aacb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07192669600000001 0.1974799633026123
save_file: ../results_LL_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_LassoLars_14423
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7eff6bf9bc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 55
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 55
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 165
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.074788772 0.1909470558166504
save_file: ../results_LL_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_LassoLars_14423
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f07ee9a4c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.07467688999999988 0.2223830223083496
save_file: ../results_LL_filtered_black_box/228_elusage//228_elusage_LassoLars_14423
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=14423, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=14423),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fa2d441ccb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07246217299999991 0.23337674140930176
save_file: ../results_LL_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_LassoLars_14423
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/663_rabe_266/663_rabe_266.tsv.gz
scaling X
scaling y
X_train: (90, 2)
y_train: (90,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f7418e00c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 30
max_resources_: 90
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 30
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 90
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
Training time measures: 0.07748329400000009 0.20996928215026855
save_file: ../results_LL_filtered_black_box/663_rabe_266//663_rabe_266_LassoLars_28020
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/192_vineyard/192_vineyard.tsv.gz
scaling X
scaling y
X_train: (39, 2)
y_train: (39,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f274e36fc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 39
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07699661000000013 0.2558760643005371
save_file: ../results_LL_filtered_black_box/192_vineyard//192_vineyard_LassoLars_28020
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/519_vinnie/519_vinnie.tsv.gz
scaling X
scaling y
X_train: (285, 2)
y_train: (285,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f8f941afc20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 95
max_resources_: 285
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 95
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 285
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
Training time measures: 0.07402956300000008 0.262631893157959
save_file: ../results_LL_filtered_black_box/519_vinnie//519_vinnie_LassoLars_28020
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/523_analcatdata_neavote/523_analcatdata_neavote.tsv.gz
scaling X
scaling y
X_train: (75, 2)
y_train: (75,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f26bd142cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 25
max_resources_: 75
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 25
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 75
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07567670999999998 0.2564992904663086
save_file: ../results_LL_filtered_black_box/523_analcatdata_neavote//523_analcatdata_neavote_LassoLars_28020
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/678_visualizing_environmental/678_visualizing_environmental.tsv.gz
scaling X
scaling y
X_train: (83, 3)
y_train: (83,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fe3a7b95c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 27
max_resources_: 83
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 27
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 81
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.09064951799999998 0.27624011039733887
save_file: ../results_LL_filtered_black_box/678_visualizing_environmental//678_visualizing_environmental_LassoLars_28020
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/556_analcatdata_apnea2/556_analcatdata_apnea2.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7fc14042ccb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07296495800000002 0.23925375938415527
save_file: ../results_LL_filtered_black_box/556_analcatdata_apnea2//556_analcatdata_apnea2_LassoLars_28020
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/712_chscase_geyser1/712_chscase_geyser1.tsv.gz
scaling X
scaling y
X_train: (166, 2)
y_train: (166,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f9ecbd95c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 55
max_resources_: 166
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 55
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 165
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07559462000000017 0.3231470584869385
save_file: ../results_LL_filtered_black_box/712_chscase_geyser1//712_chscase_geyser1_LassoLars_28020
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/228_elusage/228_elusage.tsv.gz
scaling X
scaling y
X_train: (41, 2)
y_train: (41,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f9d80d70c20>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 13
max_resources_: 41
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 13
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 39
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
Training time measures: 0.07915407399999985 0.2517991065979004
save_file: ../results_LL_filtered_black_box/228_elusage//228_elusage_LassoLars_28020
import from methods.LassoLars
algorithm: LassoLars()
hyperparams: [{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}]
========================================
Evaluating LassoLars on 
../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
========================================
compression: gzip
filename: ../filtered_black_box_datasets/557_analcatdata_apnea1/557_analcatdata_apnea1.tsv.gz
scaling X
scaling y
X_train: (356, 3)
y_train: (356,)
training HalvingGridSearchCV(cv=KFold(n_splits=5, random_state=28020, shuffle=True),
                    error_score=0.0, estimator=LassoLars(random_state=28020),
                    n_jobs=1,
                    param_grid=[{'alpha': (0.0001, 0.001, 0.01, 0.1, 1)}],
                    refit=<function _refit_callable at 0x7f661a0a9cb0>,
                    scoring='r2', verbose=2)
n_iterations: 2
n_required_iterations: 2
n_possible_iterations: 2
min_resources_: 118
max_resources_: 356
aggressive_elimination: False
factor: 3
----------
iter: 0
n_candidates: 5
n_resources: 118
Fitting 5 folds for each of 5 candidates, totalling 25 fits
[CV] END .......................................alpha=0.0001; total time=   0.1s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END .......................................alpha=0.0001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END ........................................alpha=0.001; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END .........................................alpha=0.01; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
----------
iter: 1
n_candidates: 2
n_resources: 354
Fitting 5 folds for each of 2 candidates, totalling 10 fits
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ..........................................alpha=0.1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
[CV] END ............................................alpha=1; total time=   0.0s
Training time measures: 0.07321527299999997 0.2506687641143799
save_file: ../results_LL_filtered_black_box/557_analcatdata_apnea1//557_analcatdata_apnea1_LassoLars_28020
learners: ['LassoLars']
dataset directory: ../filtered_black_box_datasets
found 19 datasets
skipped 0 jobs with results. Override with --noskips.
skipped 0 jobs without results. Override with --noskips.
skipped 0 queued jobs. Override with --noskips.
submitting 90 jobs...
Finished submitting 90 jobs.
